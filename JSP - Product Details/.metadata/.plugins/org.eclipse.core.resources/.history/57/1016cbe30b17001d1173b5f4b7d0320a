package com.product.app.servlet;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.product.app.model.Product;

@WebServlet("/productControllerServlet")
public class productControllerServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		List<String> errors = new ArrayList<>();

		String productName = request.getParameter("productName");
		String productCategory = request.getParameter("productCategory");
		String productPrice = request.getParameter("productPrice");

		if (productName.length() == 0) {
			errors.add("Product name cannot be empty");
		}
		if (productCategory.length() == 0) {
			errors.add("Product category cannot be empty");
		}
		if (productPrice.length() == 0) {
			errors.add("Product Price cannot be empty");
		} else {
			try {
				Double.parseDouble(request.getParameter("productPrice"));
			} catch (NumberFormatException e) {
				errors.add("Product Price invalid");

			}
		}

		HttpSession session = null;
		if (errors.isEmpty()) {
			Product p = new Product(productName, Double.parseDouble(productPrice), productCategory);
			session = request.getSession();
			session.setAttribute("Name", p.getProductName());
			session.setAttribute("Price", p.getProductPrice());
			session.setAttribute("Category", p.getProductCat());
		} else {
			session.setAttribute("errors", errors);
			response.sendRedirect("index.jsp");
		}
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doGet(request, response);
	}

}